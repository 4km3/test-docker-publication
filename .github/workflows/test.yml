name: Test

on:
  push:
    branches:
      - 'main'

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        version:
          - '{"distro": "alpine", "rel": "3.14", "dnsmasq": "2.85-r2"}'
          - '{"distro": "alpine", "rel": "edge", "dnsmasq": "2.85-r2"}'
    steps:
      -
        uses: actions/checkout@v2.3.4
      -
        name: Check credentials
        id: docker-credentials
        run: |
          echo ::set-output name=defined::$(test -n "${{ secrets.DOCKERHUB_USERNAME }}" && echo true || echo false)
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: steps.docker-credentials.outputs.defined == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: Extract Component Versions
        id: versions
        run: |
          echo ::set-output name=distro::$(echo '${{ matrix.version }}' | jq -j .distro)
          echo ::set-output name=rel::$(echo '${{ matrix.version }}' | jq -j .rel)
          echo ::set-output name=dnsmasq::$(echo '${{ matrix.version }}' | jq -j .dnsmasq)
      -
        name: Build and push
        if: steps.docker-credentials.outputs.defined == 'true'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: ALPINE_VERSION=${{ steps.versions.outputs.rel }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            4km3/test-docker-publication:${{ steps.versions.outputs.dnsmasq }}-${{ steps.versions.outputs.distro }}-${{ steps.versions.outputs.rel }}
            4km3/test-docker-publication:${{ steps.versions.outputs.dnsmasq }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
